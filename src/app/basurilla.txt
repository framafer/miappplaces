


my APIKEY   en Google Maps:  AIzaSyBCdmIvuKFOI8nAlQIbx7TiCegFiVLy3E8


Para incorporar bootstrap a Angular: 

    - npm install bootstrap jquery @popperjs/core   (Si da problemas de compatibilidad, usar el npm install XXXXX -- force o el npm install --save --legacy-peer-deps )
    - Con los paquetes ya instalados en el node_modules nos vamos al angular.json para añadirlos: 

            "styles":[
                "node_modules/bootstrap/dist/css/bootstrap.min.css",
                "src/styles.css"
            ],
            "scripts":[
                "node_modules/jquery/dist/jquery.min.js",
                "node_modules/@popperjs/core/dist/umd/popper.min.js",
                "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]

    Y ya podemos usar bootstrap en nuestro proyecto. Para copiar los componentes, nos vamos a la página oficial de bootstrap 


 <script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});
        var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));
        e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);
        e.set("callback",c+".maps."+q);
        a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;
        a.onerror=()=>h=n(Error(p+" could not load."));
        a.nonce=m.querySelector("script[nonce]")?.nonce||"";
        m.head.append(a)}));
        d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
        ({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>